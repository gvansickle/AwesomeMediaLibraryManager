/*
  Copyright(c) 2015 - 2018 Denis Blank <denis.blank at outlook dot com>

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files(the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions :

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
*/

namespace cti {
/** \mainpage Continuable

\section mainpage-overview Overview

<b>Continuable is a C++14 library that provides full support for:</b>
 - lazy async continuation chaining based on **callbacks**
   (\link continuable_base::then then\endlink) and
   expression templates, callbacks are wrapped nicely as \link promise_base promises\endlink.
 - **no enforced type-erasure** which means we need <b>less heap
   allocations</b> than comparable libraries, strictly following the <b>"don't
   pay for what you don't use"</b> principle.
 - support for **all, any and sequential connections** between continuables
   through expressive operator overloads \link continuable_base::operator && &&\endlink,
   \link continuable_base::operator || ||\endlink and
   \link continuable_base::operator>> >>\endlink as well as free functions
   \ref when_all, \ref when_any and \ref when_seq.
 - asynchronous \link continuable_base::fail error handling\endlink through
   \link promise_base::set_exception exceptions\endlink,
   \link configuration error codes\endlink and
   \link configuration user defined types\endlink.
 - **syntactic sugar** for instance: **partial invocation**, **tuple unpacking**,
   `co_await` support and \link continuable_base::then executors\endlink.
 - **encapsuled from any runtime**, larger framework or executors makes
   it possible to use continuable even in smaller or esoteric  usage scenarios.

\section mainpage-getting-started Getting started

Continuable is a header-only library with zero compilation dependencies.
The \ref installation and \ref configuration are explained in its own chapter.

The \ref tutorial is everything you need in order to get to know the libraries
API. Beside of this, there is a detailed in-source documentation provided.

Continuable follows the semantic versioning schema and changes are listed
in the \ref changelog.

\section mainpage-contact Contributing and Questions

Through the [Github issue tracker](https://github.com/Naios/continuable/issues)
you are welcomed to ask for questions, contribute code or request new features.
Also I would like to hear your personal opinion about the library design or
your personal experience in using the library to improve it.

\attention If you like the library I would be glad if you star it on Github,
           because it helps other users to find this library.

\note If you are using the library in your open-source or commercial project
      I would highly appreciate if you could give me a short notice so I can
      add you to a list of projects and companies using this library.
           
\section mainpage-license License

Continuable is licensed under the MIT license:

>
>   Copyright(c) 2015 - 2018 Denis Blank <denis.blank at outlook dot com>
>
>   Permission is hereby granted, free of charge, to any person obtaining a copy
>   of this software and associated documentation files(the "Software"), to deal
>   in the Software without restriction, including without limitation the rights
>   to use, copy, modify, merge, publish, distribute, sublicense, and / or sell
>   copies of the Software, and to permit persons to whom the Software is
>   furnished to do so, subject to the following conditions :
>
>   The above copyright notice and this permission notice shall be included in
>   all copies or substantial portions of the Software.
>
>   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
>   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
>   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE
>   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
>   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
>   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
>   SOFTWARE.
>

*/
}
